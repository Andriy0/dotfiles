#+startup: overview
#+title: SwayWM Configuration

* TABLE OF CONTENTS
:PROPERTIES:
:TOC:      :include all
:END:
:CONTENTS:
- [[#table-of-contents][TABLE OF CONTENTS]]
- [[#about][ABOUT]]
- [[#variables][VARIABLES]]
- [[#output-configuration][OUTPUT CONFIGURATION]]
- [[#input-configuration][INPUT CONFIGURATION]]
- [[#idle-configuration][IDLE CONFIGURATION]]
- [[#keybindings][KEYBINDINGS]]
- [[#window-rules][WINDOW RULES]]
- [[#gtk-theming][GTK THEMING]]
- [[#autostart][AUTOSTART]]
:END:

* ABOUT
This file contains my configuration for SwayWM.

* VARIABLES

#+begin_src conf :tangle ~/dotfiles/sway/.config/sway/config :noweb yes
  ### Variables
  #
  # Logo key. Use Mod1 for Alt.
  set $mod Mod4
  # Home row direction keys, like vim
  set $left h
  set $down j
  set $up k
  set $right l
  # Your preferred terminal emulator
  set $term kitty
  # Your preferred application launcher
  # Note: pass the final command to swaymsg so that the resulting window can be opened
  # on the original workspace that the command was run on.
  # set $menu rofi -show combi -modi combi | xargs swaymsg exec --
  set $menu wofi --show drun --allow-images --prompt "" | xargs swaymsg exec --

  font pango:<<font>>

  default_border pixel 1
  default_floating_border normal
  hide_edge_borders smart

  # smart_gaps on
  gaps inner 10
#+end_src

* OUTPUT CONFIGURATION
Example configuration:
   =output HDMI-A-1 resolution 1920x1080 position 1920,0=
You can get the names of your outputs by running: swaymsg -t get_outputs

#+begin_src conf :tangle ~/dotfiles/sway/.config/sway/config
  ### Output configuration
  #
  # Set wallpaper using imv, have bound there W key
  output * bg ~/.cache/wallpaper fill
#+end_src

* INPUT CONFIGURATION
You can get the names of your inputs by running: swaymsg -t get_inputs
Read `man 5 sway-input` for more information about this section.

#+begin_src conf :tangle ~/dotfiles/sway/.config/sway/config
  ### Input configuration
  #
  # Touchpad
  input "2:7:SynPS/2_Synaptics_TouchPad" {
  dwt enabled
  tap enabled
  natural_scroll enabled
  middle_emulation enabled
  tap_button_map lmr
  }

  # Keyboard
  input "1:1:AT_Translated_Set_2_keyboard" {
  repeat_delay 300
  repeat_rate 50
  xkb_layout us,ua
  xkb_variant nodeadkeys
  xkb_options altwin:menu_win,grp:ctrls_toggle
  }
#+end_src

* IDLE CONFIGURATION
This will lock your screen after 300 seconds of inactivity, then turn off
your displays after another 300 seconds, and turn your screens back on when
resumed. It will also lock your screen before your computer goes to sleep.

#+begin_src conf :tangle ~/dotfiles/sway/.config/sway/config
  ### Idle configuration
  #
  exec swayidle -w \
  timeout 600 'swaylock -f -i ~/.cache/wallpaper --clock --indicator' \
  timeout 630 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
  before-sleep 'swaylock -f -i ~/.cache/wallpaper --clock --indicator'
#+end_src

* KEYBINDINGS

#+begin_src conf :tangle ~/dotfiles/sway/.config/sway/config
  ### Keybindings
  #
  # Basics:
  #
      # Start a terminal
      bindsym $mod+Return exec $term

      # Kill focused window
      bindsym --to-code $mod+q kill

      # Start your launcher
      bindsym --to-code $mod+p exec $menu

      # Brightness controls
      bindsym --locked XF86MonBrightnessUp exec light -A 1
      bindsym --locked XF86MonBrightnessDown exec light -U 1

      # Volume controls
      bindsym --locked XF86AudioRaiseVolume exec amixer -D pipewire sset Master 5%+ unmute
      bindsym --locked XF86AudioLowerVolume exec amixer -D pipewire sset Master 5%- unmute
      bindsym --locked XF86AudioMute exec amixer -D pipewire sset Master toggle

      # Media controls
      bindsym --locked $mod+F2 exec playerctl volume .1-
      bindsym --locked $mod+F3 exec playerctl volume .1+
      bindsym --locked $mod+F5 exec playerctl stop
      bindsym --locked $mod+F6 exec playerctl previous
      bindsym --locked $mod+F7 exec playerctl play-pause
      bindsym --locked $mod+F8 exec playerctl next

      # Lock the screen
      bindsym --to-code $mod+x exec swaylock -f -i ~/.cache/wallpaper --clock --indicator

      # Screenshot
      bindsym --to-code $mod+Shift+s exec flameshot
      bindsym --to-code $mod+s exec grim -g "$(slurp)" - | swappy -f -

      # Drag floating windows by holding down $mod and left mouse button.
      # Resize them with right mouse button + $mod.
      # Despite the name, also works for non-floating windows.
      # Change normal to inverse to use left mouse button for resizing and right
      # mouse button for dragging.
      floating_modifier $mod normal

      # Reload the configuration file
      bindsym --to-code $mod+Ctrl+r reload

      # Exit sway (logs you out of your Wayland session)
      bindsym --to-code $mod+Ctrl+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
  #
  # Moving around:
  #
      # Move your focus around
      bindsym --to-code $mod+$left focus left
      bindsym --to-code $mod+$down focus down
      bindsym --to-code $mod+$up focus up
      bindsym --to-code $mod+$right focus right
      # Or use $mod+[up|down|left|right]
      bindsym $mod+Left focus left
      bindsym $mod+Down focus down
      bindsym $mod+Up focus up
      bindsym $mod+Right focus right

      # Move the focused window with the same, but add Shift
      bindsym --to-code $mod+Shift+$left move left
      bindsym --to-code $mod+Shift+$down move down
      bindsym --to-code $mod+Shift+$up move up
      bindsym --to-code $mod+Shift+$right move right
      # Ditto, with arrow keys
      bindsym $mod+Shift+Left move left
      bindsym $mod+Shift+Down move down
      bindsym $mod+Shift+Up move up
      bindsym $mod+Shift+Right move right
  #
  # Workspaces:
  #
      # Switch to workspace
      bindsym $mod+1 workspace number 1
      bindsym $mod+2 workspace number 2
      bindsym $mod+3 workspace number 3
      bindsym $mod+4 workspace number 4
      bindsym $mod+5 workspace number 5
      bindsym $mod+6 workspace number 6
      bindsym $mod+7 workspace number 7
      bindsym $mod+8 workspace number 8
      bindsym $mod+9 workspace number 9
      bindsym $mod+0 workspace number 10
      # Move focused container to workspace
      bindsym $mod+Shift+1 move container to workspace number 1
      bindsym $mod+Shift+2 move container to workspace number 2
      bindsym $mod+Shift+3 move container to workspace number 3
      bindsym $mod+Shift+4 move container to workspace number 4
      bindsym $mod+Shift+5 move container to workspace number 5
      bindsym $mod+Shift+6 move container to workspace number 6
      bindsym $mod+Shift+7 move container to workspace number 7
      bindsym $mod+Shift+8 move container to workspace number 8
      bindsym $mod+Shift+9 move container to workspace number 9
      bindsym $mod+Shift+0 move container to workspace number 10
      # Note: workspaces can have any name you want, not just numbers.
      # We just use 1-10 as the default.
  #
  # Layout stuff:
  #
      # You can "split" the current object of your focus with
      # $mod+b or $mod+v, for horizontal and vertical splits
      # respectively.
      bindsym --to-code $mod+b splith
      bindsym --to-code $mod+v splitv

      # Switch the current container between different layout styles
      # bindsym $mod+s layout stacking
      bindsym --to-code $mod+w layout tabbed
      bindsym --to-code $mod+e layout toggle split

      # Make the current focus fullscreen
      bindsym --to-code $mod+f fullscreen

      # Toggle the current focus between tiling and floating mode
      bindsym $mod+Shift+space floating toggle

      # Swap focus between the tiling area and the floating area
      bindsym $mod+space focus mode_toggle

      # Move focus to the parent container
      bindsym --to-code $mod+a focus parent
  #
  # Scratchpad:
  #
      # Sway has a "scratchpad", which is a bag of holding for windows.
      # You can send windows there and get them back later.

      # Move the currently focused window to the scratchpad
      bindsym $mod+Shift+minus move scratchpad

      # Show the next scratchpad window or hide the focused scratchpad window.
      # If there are multiple scratchpad windows, this command cycles through them.
      bindsym $mod+minus scratchpad show
  #
  # Resizing containers:
  #
  mode "resize" {
      # left will shrink the containers width
      # right will grow the containers width
      # up will shrink the containers height
      # down will grow the containers height
      bindsym --to-code $left resize shrink width 10px
      bindsym --to-code $down resize grow height 10px
      bindsym --to-code $up resize shrink height 10px
      bindsym --to-code $right resize grow width 10px

      # Ditto, with arrow keys
      bindsym Left resize shrink width 10px
      bindsym Down resize grow height 10px
      bindsym Up resize shrink height 10px
      bindsym Right resize grow width 10px

      # Return to default mode
      bindsym Return mode "default"
      bindsym Escape mode "default"
  }
  bindsym --to-code $mod+r mode "resize"
#+end_src

* WINDOW RULES

#+begin_src conf :tangle ~/dotfiles/sway/.config/sway/config
  ### Window rules
  #
  for_window [title="Dbeaver" app_id="java"] floating enable
  for_window [title="Поділіться своєю новою зустріччю"] floating enable
  for_window [title="Sharing Indicator"] floating enable
  for_window [title="Picture-in-Picture"] floating enable
#+end_src

* GTK THEMING

#+begin_src conf :noweb-ref gtk-theme
  Arc
#+end_src

#+begin_src conf :noweb-ref icon-theme
  ePapirus
#+end_src

#+begin_src conf :noweb-ref font
  Sans 13
#+end_src

#+begin_src conf :tangle ~/dotfiles/sway/.config/sway/config :noweb yes
  set $gnome-schema org.gnome.desktop.interface

  exec_always {
    gsettings set $gnome-schema icon-theme "<<icon-theme>>"
    gsettings set $gnome-schema gtk-theme "<<gtk-theme>>"
    # gsettings set $gnome-schema cursor-theme 'cursor theme name'
    gsettings set $gnome-schems font-name "<<font>>"
  }
#+end_src

#+begin_src conf :tangle ~/.gtkrc-2.0 :noweb yes
  gtk-icon-theme-name = "<<icon-theme>>"
  gtk-theme-name = "<<gtk-theme>>"
  gtk-font-name = "<<font>>"
#+end_src

#+begin_src conf :tangle ~/.config/gtk-3.0/settings.ini :noweb yes
  [Settings]
  gtk-icon-theme-name = <<icon-theme>>
  gtk-theme-name = <<gtk-theme>>
  gtk-font-name = <<font>>
#+end_src

* AUTOSTART

#+begin_src conf :tangle ~/dotfiles/sway/.config/sway/config
  ### Autostart
  #
  exec_always ~/dotfiles/waybar/.config/waybar/launch.sh
  exec redshift
  exec mako
  # exec xsettingsd
  exec nm-applet --indicator
  exec emacs --daemon
#+end_src
